{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "HEROES REST API",
    "description": ""
  },
  "host": "",
  "basePath": "",
  "tags": [
    {
      "name": "",
      "description": ""
    }
  ],
  "schemes": [],
  "securityDefinitions": {},
  "paths": {
    "/hero-names-and-ids": {
      "get": {
        "summary": "returns all the hero names and their ids",
        "description": "returns all the hero names and their ids",
        "parameters": [],
        "responses": {
          "200": {
            "description": "json list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/heroNameAndId"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hero/{id}": {
      "get": {
        "summary": "returns hero based on id",
        "description": "returns hero based on id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "hero json",
            "schema": {
              "$ref": "#/definitions/hero"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "replaces a hero in the db based on ID",
        "description": "replaces a hero in the db based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Replace hero info",
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "deletes a hero from the db based on ID.",
        "description": "deletes a hero from the db based on ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "hero Id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hero": {
      "post": {
        "summary": "add a hero to the db",
        "description": "add a hero to the db",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a user",
            "schema": {
              "$ref": "#/definitions/hero"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "oAuth2Implicit": [
              "write"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "heroNameAndId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 0
        },
        "name": {
          "type": "string",
          "example": "Grogu"
        }
      }
    },
    "hero": {
      "type": "object",
      "properties": {
        "example": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "user": {
      "type": "object",
      "properties": {}
    }
  },
  "components": {
    "securitySchemes": {
      "oAuth2Implicit": {
        "type": "oauth2",
        "flow": "implicit",
        "scopes": {
          "read": "Grant read-only access to all your data except for the account and user info",
          "write": "Grant write-only access to all your data except for the account and user info",
          "profile": "Grant read-only access to the account and user info only"
        }
      }
    }
  },
  "security": {
    "oAuth2Implicit": {
      "write": "write",
      "read": "read"
    }
  }
}